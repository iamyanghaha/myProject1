<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.ssm.myProject1.*.controller" />
	
	<!--该注释解决  in DispatcherServlet with name ''  -->
	<mvc:default-servlet-handler/>
	
	 <mvc:interceptors>
	<!--  	多个拦截器，按顺序执行-->
		<mvc:interceptor>
			<mvc:mapping path="/post/**" /> <!--  表示拦截所有的url包括子url路径>>拦截ajax请求-->
			<bean class="com.ssm.interceptor.HandlerInterceptorMain" />
		</mvc:interceptor>
	</mvc:interceptors> 
    
    <!-- 配置注解的处理器映射器和处理器适配器   简化的配置-->
	<mvc:annotation-driven conversion-service="conversionService" validator="validator">
	</mvc:annotation-driven>
	
	<!-- 静态资源解析-->
	<mvc:resources location="/html/" mapping="/html/**" />
	<mvc:resources location="/assest/" mapping="/assest/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
    <mvc:resources location="/img/" mapping="/img/**" />	
    <mvc:resources location="/css/" mapping="/css/**" />
    <mvc:resources location="/upload/" mapping="/upload/**" />

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型转换 -->
				<bean class="com.ssm.util.CustomDateConverter" />
			</list>
		</property>
	</bean>

	<!-- 校验器 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	
	<!-- 文件上传 -->
	<!--配置上传文件数据解析器  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为999999999 -->
			<value>999999999</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	
	<!-- 定义全局异常处理器 -->
    <!-- 只有一个全局异常处理器起作用 -->
	<bean id="exceptionResolver" class="com.ssm.util.CustomExceptionResolver"></bean>
</beans>